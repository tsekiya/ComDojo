// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once

WINRT_EXPORT namespace winrt::WinrtHelloWorld {

struct IMainPage;
struct MainPage;

}

namespace winrt::impl {

template <> struct category<WinrtHelloWorld::IMainPage>{ using type = interface_category; };
template <> struct category<WinrtHelloWorld::MainPage>{ using type = class_category; };
template <> struct name<WinrtHelloWorld::IMainPage>{ static constexpr auto & value{ L"WinrtHelloWorld.IMainPage" }; };
template <> struct name<WinrtHelloWorld::MainPage>{ static constexpr auto & value{ L"WinrtHelloWorld.MainPage" }; };
template <> struct guid<WinrtHelloWorld::IMainPage>{ static constexpr GUID value{ 0x970B67F7,0x76BC,0x591A,{ 0x92,0x57,0x68,0x93,0xF6,0x92,0xBF,0x67 } }; };
template <> struct default_interface<WinrtHelloWorld::MainPage>{ using type = WinrtHelloWorld::IMainPage; };

template <typename D>
struct consume_WinrtHelloWorld_IMainPage
{
};
template <> struct consume<WinrtHelloWorld::IMainPage> { template <typename D> using type = consume_WinrtHelloWorld_IMainPage<D>; };

template <> struct abi<WinrtHelloWorld::IMainPage>{ struct type : IInspectable
{
};};

}
